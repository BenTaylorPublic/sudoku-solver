require=function l(i,a,u){function n(t,e){if(!a[t]){if(!i[t]){var s="function"==typeof require&&require;if(!e&&s)return s(t,!0);if(r)return r(t,!0);throw(s=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",s}s=a[t]={exports:{}},i[t][0].call(s.exports,function(e){return n(i[t][1][e]||e)},s,s.exports,l,i,a,u)}return a[t].exports}for(var r="function"==typeof require&&require,e=0;e<u.length;e++)n(u[e]);return n}({"./shared/algorithms/depth-first":[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.DepthFirst=void 0;const i=e("../sudoku-state"),a=e("../drawable-sudoku-state"),u=e("../enums");s.DepthFirst=class{constructor(){this.name="Depth First",this.nextToAssign=1,this.stack=[],this._givenUp=null}setup(e){this.stack.push(e)}step(){const e=this.stack.pop();if(null==e){console.error("Stack is empty"),this._givenUp="Stack is empty";var t=new i.SudokuState;return new a.DrawableSudokuState(t.cells,{x:0,y:0},u.StepAction.FailedToAssign)}t=e.firstOpenCell;const s=i.SudokuState.clone(e);let l=null;return l=e.isValid2(t,this.nextToAssign)?(s.cells[t.y][t.x].value=this.nextToAssign,this.stack.push(s),u.StepAction.Assigned):(s.cells[t.y][t.x].value=this.nextToAssign,u.StepAction.FailedToAssign),this.nextToAssign<9?(this.stack.push(e),this.nextToAssign++):this.nextToAssign=1,new a.DrawableSudokuState(s.cells,t,l)}get givenUp(){return null!=this._givenUp}}},{"../drawable-sudoku-state":"./shared/drawable-sudoku-state","../enums":"./shared/enums","../sudoku-state":"./shared/sudoku-state"}],"./shared/drawable-sudoku-state":[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.DrawableSudokuState=void 0;class l extends e("./sudoku-state").SudokuState{constructor(e,t,s){super(e),this.lastActionedCell=t,this.action=s}}s.DrawableSudokuState=l},{"./sudoku-state":"./shared/sudoku-state"}],"./shared/enums":[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.StepAction=void 0,(s=s.StepAction||(s.StepAction={}))[s.Assigned=0]="Assigned",s[s.FailedToAssign=1]="FailedToAssign"},{}],"./shared/interfaces":[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0})},{}],"./shared/predefined-states":[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.PredefinedStates=void 0;const l=e("./sudoku-state");s.PredefinedStates=class e{static getStates(){return[e.state1]}static get state1(){const e={name:"State1",state:new l.SudokuState};return e.state.setInitialValue(3,0,8),e.state.setInitialValue(6,0,4),e.state.setInitialValue(7,0,2),e.state.setInitialValue(0,1,5),e.state.setInitialValue(3,1,6),e.state.setInitialValue(4,1,7),e.state.setInitialValue(5,2,9),e.state.setInitialValue(8,2,5),e.state.setInitialValue(0,3,7),e.state.setInitialValue(1,3,4),e.state.setInitialValue(3,3,1),e.state.setInitialValue(2,4,9),e.state.setInitialValue(4,4,3),e.state.setInitialValue(6,4,7),e.state.setInitialValue(5,5,7),e.state.setInitialValue(7,5,4),e.state.setInitialValue(8,5,8),e.state.setInitialValue(0,6,8),e.state.setInitialValue(3,6,4),e.state.setInitialValue(4,7,9),e.state.setInitialValue(5,7,8),e.state.setInitialValue(8,7,3),e.state.setInitialValue(1,8,9),e.state.setInitialValue(2,8,5),e.state.setInitialValue(5,8,3),e}}},{"./sudoku-state":"./shared/sudoku-state"}],"./shared/sudoku-algorithm":[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.SudokuAlgorithm=void 0;s.SudokuAlgorithm=class{constructor(){}}},{}],"./shared/sudoku-cell":[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.SudokuCell=void 0;s.SudokuCell=class s{constructor(){this.locked=!1,this.value=null}static clone(e){const t=new s;return t.locked=e.locked,t.value=e.value,t}setInitialValue(e){this.value=e,this.locked=!0}get needsValue(){return null==this.value}}},{}],"./shared/sudoku-state":[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.SudokuState=void 0;const l=e("./sudoku-cell");s.SudokuState=class t{constructor(s=null){if(null==s){this.cells=[];for(let t=0;t<9;t++){this.cells.push([]);for(let e=0;e<9;e++)this.cells[t].push(new l.SudokuCell)}}else{this.cells=[];for(let t=0;t<9;t++){this.cells.push([]);for(let e=0;e<9;e++)this.cells[t][e]=l.SudokuCell.clone(s[t][e])}}}static clone(e){return new t(e.cells)}setEmpty(){}setInitialValue(e,t,s){this.cells[t][e].setInitialValue(s)}get isSolved(){for(let t=0;t<9;t++)for(let e=0;e<9;e++)if(this.cells[t][e].needsValue)return!1;return!0}get firstOpenCell(){for(let t=0;t<9;t++)for(let e=0;e<9;e++)if(this.cells[t][e].needsValue)return{x:e,y:t};throw new Error("No open cells")}isValid2(e,t){return this.isValid(e.x,e.y,t)}isValid(t,s,l){if(!this.cells[s][t].needsValue)return!1;for(let e=0;e<9;e++)if(this.cells[s][e].value===l)return!1;for(let e=0;e<9;e++)if(this.cells[e][t].value===l)return!1;let i,e;i=t<=2?0:t<=5?3:6,e=s<=2?0:s<=5?3:6;for(let t=e;t<e+3;t++)for(let e=i;e<i+3;e++)if(this.cells[t][e].value===l)return!1;return!0}}},{"./sudoku-cell":"./shared/sudoku-cell"}],"./shared/types":[function(e,t,s){},{}]},{},[]);