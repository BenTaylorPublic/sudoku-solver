require=function l(i,a,u){function n(e,t){if(!a[e]){if(!i[e]){var s="function"==typeof require&&require;if(!t&&s)return s(e,!0);if(r)return r(e,!0);throw(s=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",s}s=a[e]={exports:{}},i[e][0].call(s.exports,function(t){return n(i[e][1][t]||t)},s,s.exports,l,i,a,u)}return a[e].exports}for(var r="function"==typeof require&&require,t=0;t<u.length;t++)n(u[t]);return n}({"./shared/algorithms/depth-first":[function(t,e,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.DepthFirst=void 0;const i=t("../sudoku-state"),a=t("../drawable-sudoku-state"),u=t("../enums");s.DepthFirst=class{constructor(){this.name="Depth First",this.nextToAssign=1,this.stack=[],this._givenUp=null}setup(t){this.stack.push(t)}step(){const t=this.stack.pop();if(null==t){console.error("Stack is empty"),this._givenUp="Stack is empty";var e=new i.SudokuState;return new a.DrawableSudokuState(e.cells,{x:0,y:0},u.StepAction.FailedToAssign,this.getStats())}e=t.firstOpenCell;const s=i.SudokuState.clone(t);let l=null;return l=t.isValid2(e,this.nextToAssign)?(s.cells[e.y][e.x].value=this.nextToAssign,this.stack.push(s),u.StepAction.Assigned):(s.cells[e.y][e.x].value=this.nextToAssign,u.StepAction.FailedToAssign),this.nextToAssign<9?(this.stack.push(t),this.nextToAssign++):this.nextToAssign=1,new a.DrawableSudokuState(s.cells,e,l,this.getStats())}get givenUp(){return null!=this._givenUp}getStats(){return[{name:"Stack size",value:this.stack.length.toString()}]}}},{"../drawable-sudoku-state":"./shared/drawable-sudoku-state","../enums":"./shared/enums","../sudoku-state":"./shared/sudoku-state"}],"./shared/drawable-sudoku-state":[function(t,e,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.DrawableSudokuState=void 0;class l extends t("./sudoku-state").SudokuState{constructor(t,e,s,l){super(t),this.lastActionedCell=e,this.action=s,this.stats=l}}s.DrawableSudokuState=l},{"./sudoku-state":"./shared/sudoku-state"}],"./shared/enums":[function(t,e,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.StepAction=void 0,(s=s.StepAction||(s.StepAction={}))[s.Assigned=0]="Assigned",s[s.FailedToAssign=1]="FailedToAssign"},{}],"./shared/interfaces":[function(t,e,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0})},{}],"./shared/predefined-states":[function(t,e,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.PredefinedStates=void 0;const l=t("./sudoku-state");s.PredefinedStates=class t{static getStates(){return[t.state1]}static get state1(){const t={name:"State1",state:new l.SudokuState};return t.state.setInitialValue(3,0,8),t.state.setInitialValue(6,0,4),t.state.setInitialValue(7,0,2),t.state.setInitialValue(0,1,5),t.state.setInitialValue(3,1,6),t.state.setInitialValue(4,1,7),t.state.setInitialValue(5,2,9),t.state.setInitialValue(8,2,5),t.state.setInitialValue(0,3,7),t.state.setInitialValue(1,3,4),t.state.setInitialValue(3,3,1),t.state.setInitialValue(2,4,9),t.state.setInitialValue(4,4,3),t.state.setInitialValue(6,4,7),t.state.setInitialValue(5,5,7),t.state.setInitialValue(7,5,4),t.state.setInitialValue(8,5,8),t.state.setInitialValue(0,6,8),t.state.setInitialValue(3,6,4),t.state.setInitialValue(4,7,9),t.state.setInitialValue(5,7,8),t.state.setInitialValue(8,7,3),t.state.setInitialValue(1,8,9),t.state.setInitialValue(2,8,5),t.state.setInitialValue(5,8,3),t}}},{"./sudoku-state":"./shared/sudoku-state"}],"./shared/sudoku-algorithm":[function(t,e,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.SudokuAlgorithm=void 0;s.SudokuAlgorithm=class{constructor(){}}},{}],"./shared/sudoku-cell":[function(t,e,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.SudokuCell=void 0;s.SudokuCell=class s{constructor(){this.locked=!1,this.value=null}static clone(t){const e=new s;return e.locked=t.locked,e.value=t.value,e}setInitialValue(t){this.value=t,this.locked=!0}get needsValue(){return null==this.value}}},{}],"./shared/sudoku-state":[function(t,e,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.SudokuState=void 0;const l=t("./sudoku-cell");s.SudokuState=class e{constructor(s=null){if(null==s){this.cells=[];for(let e=0;e<9;e++){this.cells.push([]);for(let t=0;t<9;t++)this.cells[e].push(new l.SudokuCell)}}else{this.cells=[];for(let e=0;e<9;e++){this.cells.push([]);for(let t=0;t<9;t++)this.cells[e][t]=l.SudokuCell.clone(s[e][t])}}}static clone(t){return new e(t.cells)}setEmpty(){}setInitialValue(t,e,s){this.cells[e][t].setInitialValue(s)}get isSolved(){for(let e=0;e<9;e++)for(let t=0;t<9;t++)if(this.cells[e][t].needsValue)return!1;return!0}get firstOpenCell(){for(let e=0;e<9;e++)for(let t=0;t<9;t++)if(this.cells[e][t].needsValue)return{x:t,y:e};throw new Error("No open cells")}isValid2(t,e){return this.isValid(t.x,t.y,e)}isValid(e,s,l){if(!this.cells[s][e].needsValue)return!1;for(let t=0;t<9;t++)if(this.cells[s][t].value===l)return!1;for(let t=0;t<9;t++)if(this.cells[t][e].value===l)return!1;let i,t;i=e<=2?0:e<=5?3:6,t=s<=2?0:s<=5?3:6;for(let e=t;e<t+3;e++)for(let t=i;t<i+3;t++)if(this.cells[e][t].value===l)return!1;return!0}}},{"./sudoku-cell":"./shared/sudoku-cell"}],"./shared/types":[function(t,e,s){},{}]},{},[]);